package nth.meyn.cx.sysmac.converter.sysmac.clipboard;

import java.util.Set;
import java.util.UUID;

import javax.swing.plaf.synth.SynthSliderUI;
import javax.xml.bind.DatatypeConverter;

import org.apache.commons.lang3.StringUtils;

import nth.meyn.cx.sysmac.converter.CxVariable;
import nth.meyn.cx.sysmac.converter.util.StringToArrayCodeUtil;

public class SysmacSymbolDataFactory {



	/**
	 * Created with {@link #getLadderData()} and then
	 * {@link StringToArrayCodeUtil#print(String)}<br>
	 * First copy Ladder program in Sysmac, than: <br>
	 * {@code String sysmacSymbolData=SysmacClipboard.getSymbolData();}<br>
	 * {@code String byteArrayCode = StringToArrayCodeUtil.print(sysmacSymbolData);}<br>
	 * {@code System.out.println(byteArrayCode);}
	 * 
	 * @return string for clipboard
	 */
	public static String createExample() {
		byte[] array = DatatypeConverter.parseHexBinary(
				
		String symbolData = new String(array);
		return symbolData;
	}

	public static String create(Set<CxVariable> cxVariables) {
		StringBuilder data = new StringBuilder();
		data.append(createPrefix());
				for (CxVariable cxVariable : cxVariables) {
			data.append(createVariableLine(cxVariable));
		}
		data.append(crearePostFix());
		
		String s1=data.toString();
		String s2=createExample();
		String s3=SysmacClipboard.getSymbolData();
		System.out.println(StringUtils.indexOfDifference(s2, s3));;
		System.out.println(StringUtils.indexOfDifference(s1, s2));;
		
		return data.toString();
	}

	//++D=BOOL	N=iTest1	ID=07c93356-3dd8-4e3b-896f-478800000009	G=VAR	Com=Input variable 1
	private static String createVariableLine(CxVariable cxVariable) {
		StringBuilder data = new StringBuilder();
		data.append("++D=");
		data.append(cxVariable.getType().toString());
		data.append("\tN=");
		data.append(cxVariable.getName());
		data.append("\tID=");
		data.append( UUID.randomUUID());
		data.append("\tIG=VAR");
		data.append("\tICom=");
		data.append( cxVariable.getComment());
		data.append("\r\n");
		return data.toString();
	}

	private static String crearePostFix() {
//		String s = createExample();
//		System.out.println(s);
//		String prefix=s.substring(s.indexOf("+GN=VAR_EXTERNAL"));
//		System.out.println(prefix);
//		System.out.println(StringToArrayCodeUtil.print(prefix));
		byte[] postFix= DatatypeConverter.parseHexBinary
		return new String(postFix);
	}

	private static String createPrefix() {
//		String s = createExample();
//		System.out.println(s);
//		
//		String prefix=s.substring(0,s.indexOf("+GN=VAR	GVT=DefaultGroup")+"+GN=VAR	GVT=DefaultGroup".length());
//		
//		System.out.println(prefix);
//		
//		System.out.println(StringToArrayCodeUtil.print(prefix));
		byte[] prefix= DatatypeConverter.parseHexBinary
		return new String(prefix);
	}
}
